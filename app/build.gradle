apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.google.protobuf'


android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "fr.xebia.pairs"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$rootProject.kotlin_version"
    androidTestImplementation "com.android.support.test:runner:$rootProject.runnerVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"

//    implementation "com.android.support:support-v4:$rootProject.supportLibraryVersion"
    implementation "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
//    implementation "com.android.support:design:$rootProject.supportLibraryVersion"
//    implementation "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
//    implementation "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
//    implementation "com.android.support:support-annotations:$rootProject.supportLibraryVersion"
    implementation "com.android.support.constraint:constraint-layout:$rootProject.constraintLayoutVersion"

    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxAndroidVersion"
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxJavaVersion"
//    implementation "com.github.bumptech.glide:glide:$rootProject.glideVersion"
//    annotationProcessor "com.github.bumptech.glide:compiler:$rootProject.glideVersion"
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-protobuf:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofitVersion"
//    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.okHttpVersion"
//    testImplementation "com.squareup.okhttp3:mockwebserver:$rootProject.okHttpVersion"

    testImplementation "junit:junit:$rootProject.junitVersion"
//    testImplementation "org.mockito:mockito-core:$rootProject.ext.mockitoVersion"
//    testImplementation "org.mockito:mockito-android:$rootProject.ext.mockitoVersion"
//    testImplementation "org.hamcrest:hamcrest-all:$rootProject.ext.hamcrestVersion"
//    testImplementation "org.powermock:powermock-module-junit4:$rootProject.ext.powerMockito"
//    testImplementation "org.powermock:powermock-api-mockito:$rootProject.ext.powerMockito"

//    compile "com.google.protobuf:protobuf-lite:$rootProject.protobufVersion"
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.0.0'
    }
    plugins {
        javalite {
            artifact = 'com.google.protobuf:protoc-gen-javalite:3.0.0'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                remove java
            }
            task.plugins {
                javalite {}
            }
        }
    }
}